
bare_metal.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000f34  08000130  08000130  00001130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001064  0800106c  0000206c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001064  08001064  0000206c  2**0
                  CONTENTS
  4 .ARM          00000000  08001064  08001064  0000206c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001064  0800106c  0000206c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001064  08001064  00002064  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001068  08001068  00002068  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  0000206c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000028  20000000  0800106c  00003000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000028  0800106c  00003028  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0000206c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000985  00000000  00000000  00002095  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000034f  00000000  00000000  00002a1a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000d0  00000000  00000000  00002d70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000008c  00000000  00000000  00002e40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001273  00000000  00000000  00002ecc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000fd1  00000000  00000000  0000413f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000465e  00000000  00000000  00005110  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0000976e  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000378  00000000  00000000  000097b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000064  00000000  00000000  00009b2c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800104c 	.word	0x0800104c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800104c 	.word	0x0800104c

08000170 <__aeabi_drsub>:
 8000170:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8000174:	e002      	b.n	800017c <__adddf3>
 8000176:	bf00      	nop

08000178 <__aeabi_dsub>:
 8000178:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0800017c <__adddf3>:
 800017c:	b530      	push	{r4, r5, lr}
 800017e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000182:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000186:	ea94 0f05 	teq	r4, r5
 800018a:	bf08      	it	eq
 800018c:	ea90 0f02 	teqeq	r0, r2
 8000190:	bf1f      	itttt	ne
 8000192:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000196:	ea55 0c02 	orrsne.w	ip, r5, r2
 800019a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800019e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001a2:	f000 80e2 	beq.w	800036a <__adddf3+0x1ee>
 80001a6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001aa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ae:	bfb8      	it	lt
 80001b0:	426d      	neglt	r5, r5
 80001b2:	dd0c      	ble.n	80001ce <__adddf3+0x52>
 80001b4:	442c      	add	r4, r5
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	ea82 0000 	eor.w	r0, r2, r0
 80001c2:	ea83 0101 	eor.w	r1, r3, r1
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	2d36      	cmp	r5, #54	@ 0x36
 80001d0:	bf88      	it	hi
 80001d2:	bd30      	pophi	{r4, r5, pc}
 80001d4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80001d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001dc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 80001e0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001e4:	d002      	beq.n	80001ec <__adddf3+0x70>
 80001e6:	4240      	negs	r0, r0
 80001e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001ec:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 80001f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001f4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001f8:	d002      	beq.n	8000200 <__adddf3+0x84>
 80001fa:	4252      	negs	r2, r2
 80001fc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000200:	ea94 0f05 	teq	r4, r5
 8000204:	f000 80a7 	beq.w	8000356 <__adddf3+0x1da>
 8000208:	f1a4 0401 	sub.w	r4, r4, #1
 800020c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000210:	db0d      	blt.n	800022e <__adddf3+0xb2>
 8000212:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000216:	fa22 f205 	lsr.w	r2, r2, r5
 800021a:	1880      	adds	r0, r0, r2
 800021c:	f141 0100 	adc.w	r1, r1, #0
 8000220:	fa03 f20e 	lsl.w	r2, r3, lr
 8000224:	1880      	adds	r0, r0, r2
 8000226:	fa43 f305 	asr.w	r3, r3, r5
 800022a:	4159      	adcs	r1, r3
 800022c:	e00e      	b.n	800024c <__adddf3+0xd0>
 800022e:	f1a5 0520 	sub.w	r5, r5, #32
 8000232:	f10e 0e20 	add.w	lr, lr, #32
 8000236:	2a01      	cmp	r2, #1
 8000238:	fa03 fc0e 	lsl.w	ip, r3, lr
 800023c:	bf28      	it	cs
 800023e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000242:	fa43 f305 	asr.w	r3, r3, r5
 8000246:	18c0      	adds	r0, r0, r3
 8000248:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800024c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000250:	d507      	bpl.n	8000262 <__adddf3+0xe6>
 8000252:	f04f 0e00 	mov.w	lr, #0
 8000256:	f1dc 0c00 	rsbs	ip, ip, #0
 800025a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800025e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000262:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8000266:	d31b      	bcc.n	80002a0 <__adddf3+0x124>
 8000268:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 800026c:	d30c      	bcc.n	8000288 <__adddf3+0x10c>
 800026e:	0849      	lsrs	r1, r1, #1
 8000270:	ea5f 0030 	movs.w	r0, r0, rrx
 8000274:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000278:	f104 0401 	add.w	r4, r4, #1
 800027c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000280:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 8000284:	f080 809a 	bcs.w	80003bc <__adddf3+0x240>
 8000288:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 800028c:	bf08      	it	eq
 800028e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000292:	f150 0000 	adcs.w	r0, r0, #0
 8000296:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800029a:	ea41 0105 	orr.w	r1, r1, r5
 800029e:	bd30      	pop	{r4, r5, pc}
 80002a0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002a4:	4140      	adcs	r0, r0
 80002a6:	eb41 0101 	adc.w	r1, r1, r1
 80002aa:	3c01      	subs	r4, #1
 80002ac:	bf28      	it	cs
 80002ae:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80002b2:	d2e9      	bcs.n	8000288 <__adddf3+0x10c>
 80002b4:	f091 0f00 	teq	r1, #0
 80002b8:	bf04      	itt	eq
 80002ba:	4601      	moveq	r1, r0
 80002bc:	2000      	moveq	r0, #0
 80002be:	fab1 f381 	clz	r3, r1
 80002c2:	bf08      	it	eq
 80002c4:	3320      	addeq	r3, #32
 80002c6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ca:	f1b3 0220 	subs.w	r2, r3, #32
 80002ce:	da0c      	bge.n	80002ea <__adddf3+0x16e>
 80002d0:	320c      	adds	r2, #12
 80002d2:	dd08      	ble.n	80002e6 <__adddf3+0x16a>
 80002d4:	f102 0c14 	add.w	ip, r2, #20
 80002d8:	f1c2 020c 	rsb	r2, r2, #12
 80002dc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002e0:	fa21 f102 	lsr.w	r1, r1, r2
 80002e4:	e00c      	b.n	8000300 <__adddf3+0x184>
 80002e6:	f102 0214 	add.w	r2, r2, #20
 80002ea:	bfd8      	it	le
 80002ec:	f1c2 0c20 	rsble	ip, r2, #32
 80002f0:	fa01 f102 	lsl.w	r1, r1, r2
 80002f4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002f8:	bfdc      	itt	le
 80002fa:	ea41 010c 	orrle.w	r1, r1, ip
 80002fe:	4090      	lslle	r0, r2
 8000300:	1ae4      	subs	r4, r4, r3
 8000302:	bfa2      	ittt	ge
 8000304:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000308:	4329      	orrge	r1, r5
 800030a:	bd30      	popge	{r4, r5, pc}
 800030c:	ea6f 0404 	mvn.w	r4, r4
 8000310:	3c1f      	subs	r4, #31
 8000312:	da1c      	bge.n	800034e <__adddf3+0x1d2>
 8000314:	340c      	adds	r4, #12
 8000316:	dc0e      	bgt.n	8000336 <__adddf3+0x1ba>
 8000318:	f104 0414 	add.w	r4, r4, #20
 800031c:	f1c4 0220 	rsb	r2, r4, #32
 8000320:	fa20 f004 	lsr.w	r0, r0, r4
 8000324:	fa01 f302 	lsl.w	r3, r1, r2
 8000328:	ea40 0003 	orr.w	r0, r0, r3
 800032c:	fa21 f304 	lsr.w	r3, r1, r4
 8000330:	ea45 0103 	orr.w	r1, r5, r3
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f1c4 040c 	rsb	r4, r4, #12
 800033a:	f1c4 0220 	rsb	r2, r4, #32
 800033e:	fa20 f002 	lsr.w	r0, r0, r2
 8000342:	fa01 f304 	lsl.w	r3, r1, r4
 8000346:	ea40 0003 	orr.w	r0, r0, r3
 800034a:	4629      	mov	r1, r5
 800034c:	bd30      	pop	{r4, r5, pc}
 800034e:	fa21 f004 	lsr.w	r0, r1, r4
 8000352:	4629      	mov	r1, r5
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f094 0f00 	teq	r4, #0
 800035a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800035e:	bf06      	itte	eq
 8000360:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8000364:	3401      	addeq	r4, #1
 8000366:	3d01      	subne	r5, #1
 8000368:	e74e      	b.n	8000208 <__adddf3+0x8c>
 800036a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800036e:	bf18      	it	ne
 8000370:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000374:	d029      	beq.n	80003ca <__adddf3+0x24e>
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	d005      	beq.n	800038e <__adddf3+0x212>
 8000382:	ea54 0c00 	orrs.w	ip, r4, r0
 8000386:	bf04      	itt	eq
 8000388:	4619      	moveq	r1, r3
 800038a:	4610      	moveq	r0, r2
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	ea91 0f03 	teq	r1, r3
 8000392:	bf1e      	ittt	ne
 8000394:	2100      	movne	r1, #0
 8000396:	2000      	movne	r0, #0
 8000398:	bd30      	popne	{r4, r5, pc}
 800039a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800039e:	d105      	bne.n	80003ac <__adddf3+0x230>
 80003a0:	0040      	lsls	r0, r0, #1
 80003a2:	4149      	adcs	r1, r1
 80003a4:	bf28      	it	cs
 80003a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80003aa:	bd30      	pop	{r4, r5, pc}
 80003ac:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80003b0:	bf3c      	itt	cc
 80003b2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80003b6:	bd30      	popcc	{r4, r5, pc}
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80003bc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 80003c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80003c4:	f04f 0000 	mov.w	r0, #0
 80003c8:	bd30      	pop	{r4, r5, pc}
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf1a      	itte	ne
 80003d0:	4619      	movne	r1, r3
 80003d2:	4610      	movne	r0, r2
 80003d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003d8:	bf1c      	itt	ne
 80003da:	460b      	movne	r3, r1
 80003dc:	4602      	movne	r2, r0
 80003de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003e2:	bf06      	itte	eq
 80003e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003e8:	ea91 0f03 	teqeq	r1, r3
 80003ec:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 80003f0:	bd30      	pop	{r4, r5, pc}
 80003f2:	bf00      	nop

080003f4 <__aeabi_ui2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000408:	f04f 0500 	mov.w	r5, #0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e750      	b.n	80002b4 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_i2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000428:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800042c:	bf48      	it	mi
 800042e:	4240      	negmi	r0, r0
 8000430:	f04f 0100 	mov.w	r1, #0
 8000434:	e73e      	b.n	80002b4 <__adddf3+0x138>
 8000436:	bf00      	nop

08000438 <__aeabi_f2d>:
 8000438:	0042      	lsls	r2, r0, #1
 800043a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800043e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000442:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000446:	bf1f      	itttt	ne
 8000448:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800044c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000450:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000454:	4770      	bxne	lr
 8000456:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800045a:	bf08      	it	eq
 800045c:	4770      	bxeq	lr
 800045e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8000462:	bf04      	itt	eq
 8000464:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000468:	4770      	bxeq	lr
 800046a:	b530      	push	{r4, r5, lr}
 800046c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000474:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000478:	e71c      	b.n	80002b4 <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_ul2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f04f 0500 	mov.w	r5, #0
 800048a:	e00a      	b.n	80004a2 <__aeabi_l2d+0x16>

0800048c <__aeabi_l2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 800049a:	d502      	bpl.n	80004a2 <__aeabi_l2d+0x16>
 800049c:	4240      	negs	r0, r0
 800049e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004a6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004aa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004ae:	f43f aed8 	beq.w	8000262 <__adddf3+0xe6>
 80004b2:	f04f 0203 	mov.w	r2, #3
 80004b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ba:	bf18      	it	ne
 80004bc:	3203      	addne	r2, #3
 80004be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004c2:	bf18      	it	ne
 80004c4:	3203      	addne	r2, #3
 80004c6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ca:	f1c2 0320 	rsb	r3, r2, #32
 80004ce:	fa00 fc03 	lsl.w	ip, r0, r3
 80004d2:	fa20 f002 	lsr.w	r0, r0, r2
 80004d6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004da:	ea40 000e 	orr.w	r0, r0, lr
 80004de:	fa21 f102 	lsr.w	r1, r1, r2
 80004e2:	4414      	add	r4, r2
 80004e4:	e6bd      	b.n	8000262 <__adddf3+0xe6>
 80004e6:	bf00      	nop

080004e8 <__aeabi_dmul>:
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80004ee:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80004f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004f6:	bf1d      	ittte	ne
 80004f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004fc:	ea94 0f0c 	teqne	r4, ip
 8000500:	ea95 0f0c 	teqne	r5, ip
 8000504:	f000 f8de 	bleq	80006c4 <__aeabi_dmul+0x1dc>
 8000508:	442c      	add	r4, r5
 800050a:	ea81 0603 	eor.w	r6, r1, r3
 800050e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000512:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000516:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800051a:	bf18      	it	ne
 800051c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000520:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000524:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000528:	d038      	beq.n	800059c <__aeabi_dmul+0xb4>
 800052a:	fba0 ce02 	umull	ip, lr, r0, r2
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000536:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800053a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800053e:	f04f 0600 	mov.w	r6, #0
 8000542:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000546:	f09c 0f00 	teq	ip, #0
 800054a:	bf18      	it	ne
 800054c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000550:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000554:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000558:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800055c:	d204      	bcs.n	8000568 <__aeabi_dmul+0x80>
 800055e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000562:	416d      	adcs	r5, r5
 8000564:	eb46 0606 	adc.w	r6, r6, r6
 8000568:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800056c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000570:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000574:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000578:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800057c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000580:	bf88      	it	hi
 8000582:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000586:	d81e      	bhi.n	80005c6 <__aeabi_dmul+0xde>
 8000588:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 800058c:	bf08      	it	eq
 800058e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000592:	f150 0000 	adcs.w	r0, r0, #0
 8000596:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80005a0:	ea46 0101 	orr.w	r1, r6, r1
 80005a4:	ea40 0002 	orr.w	r0, r0, r2
 80005a8:	ea81 0103 	eor.w	r1, r1, r3
 80005ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005b0:	bfc2      	ittt	gt
 80005b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ba:	bd70      	popgt	{r4, r5, r6, pc}
 80005bc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005c0:	f04f 0e00 	mov.w	lr, #0
 80005c4:	3c01      	subs	r4, #1
 80005c6:	f300 80ab 	bgt.w	8000720 <__aeabi_dmul+0x238>
 80005ca:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 80005ce:	bfde      	ittt	le
 80005d0:	2000      	movle	r0, #0
 80005d2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 80005d6:	bd70      	pople	{r4, r5, r6, pc}
 80005d8:	f1c4 0400 	rsb	r4, r4, #0
 80005dc:	3c20      	subs	r4, #32
 80005de:	da35      	bge.n	800064c <__aeabi_dmul+0x164>
 80005e0:	340c      	adds	r4, #12
 80005e2:	dc1b      	bgt.n	800061c <__aeabi_dmul+0x134>
 80005e4:	f104 0414 	add.w	r4, r4, #20
 80005e8:	f1c4 0520 	rsb	r5, r4, #32
 80005ec:	fa00 f305 	lsl.w	r3, r0, r5
 80005f0:	fa20 f004 	lsr.w	r0, r0, r4
 80005f4:	fa01 f205 	lsl.w	r2, r1, r5
 80005f8:	ea40 0002 	orr.w	r0, r0, r2
 80005fc:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000600:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000604:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000608:	fa21 f604 	lsr.w	r6, r1, r4
 800060c:	eb42 0106 	adc.w	r1, r2, r6
 8000610:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000614:	bf08      	it	eq
 8000616:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	f1c4 040c 	rsb	r4, r4, #12
 8000620:	f1c4 0520 	rsb	r5, r4, #32
 8000624:	fa00 f304 	lsl.w	r3, r0, r4
 8000628:	fa20 f005 	lsr.w	r0, r0, r5
 800062c:	fa01 f204 	lsl.w	r2, r1, r4
 8000630:	ea40 0002 	orr.w	r0, r0, r2
 8000634:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	f141 0100 	adc.w	r1, r1, #0
 8000640:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000644:	bf08      	it	eq
 8000646:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f1c4 0520 	rsb	r5, r4, #32
 8000650:	fa00 f205 	lsl.w	r2, r0, r5
 8000654:	ea4e 0e02 	orr.w	lr, lr, r2
 8000658:	fa20 f304 	lsr.w	r3, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea43 0302 	orr.w	r3, r3, r2
 8000664:	fa21 f004 	lsr.w	r0, r1, r4
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 800066c:	fa21 f204 	lsr.w	r2, r1, r4
 8000670:	ea20 0002 	bic.w	r0, r0, r2
 8000674:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f094 0f00 	teq	r4, #0
 8000688:	d10f      	bne.n	80006aa <__aeabi_dmul+0x1c2>
 800068a:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 800068e:	0040      	lsls	r0, r0, #1
 8000690:	eb41 0101 	adc.w	r1, r1, r1
 8000694:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000698:	bf08      	it	eq
 800069a:	3c01      	subeq	r4, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1a6>
 800069e:	ea41 0106 	orr.w	r1, r1, r6
 80006a2:	f095 0f00 	teq	r5, #0
 80006a6:	bf18      	it	ne
 80006a8:	4770      	bxne	lr
 80006aa:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80006ae:	0052      	lsls	r2, r2, #1
 80006b0:	eb43 0303 	adc.w	r3, r3, r3
 80006b4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80006b8:	bf08      	it	eq
 80006ba:	3d01      	subeq	r5, #1
 80006bc:	d0f7      	beq.n	80006ae <__aeabi_dmul+0x1c6>
 80006be:	ea43 0306 	orr.w	r3, r3, r6
 80006c2:	4770      	bx	lr
 80006c4:	ea94 0f0c 	teq	r4, ip
 80006c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006cc:	bf18      	it	ne
 80006ce:	ea95 0f0c 	teqne	r5, ip
 80006d2:	d00c      	beq.n	80006ee <__aeabi_dmul+0x206>
 80006d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d8:	bf18      	it	ne
 80006da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006de:	d1d1      	bne.n	8000684 <__aeabi_dmul+0x19c>
 80006e0:	ea81 0103 	eor.w	r1, r1, r3
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006e8:	f04f 0000 	mov.w	r0, #0
 80006ec:	bd70      	pop	{r4, r5, r6, pc}
 80006ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f2:	bf06      	itte	eq
 80006f4:	4610      	moveq	r0, r2
 80006f6:	4619      	moveq	r1, r3
 80006f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006fc:	d019      	beq.n	8000732 <__aeabi_dmul+0x24a>
 80006fe:	ea94 0f0c 	teq	r4, ip
 8000702:	d102      	bne.n	800070a <__aeabi_dmul+0x222>
 8000704:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000708:	d113      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800070a:	ea95 0f0c 	teq	r5, ip
 800070e:	d105      	bne.n	800071c <__aeabi_dmul+0x234>
 8000710:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000714:	bf1c      	itt	ne
 8000716:	4610      	movne	r0, r2
 8000718:	4619      	movne	r1, r3
 800071a:	d10a      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800071c:	ea81 0103 	eor.w	r1, r1, r3
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000724:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000728:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800072c:	f04f 0000 	mov.w	r0, #0
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000736:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800073a:	bd70      	pop	{r4, r5, r6, pc}

0800073c <__aeabi_ddiv>:
 800073c:	b570      	push	{r4, r5, r6, lr}
 800073e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000742:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000746:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800074a:	bf1d      	ittte	ne
 800074c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000750:	ea94 0f0c 	teqne	r4, ip
 8000754:	ea95 0f0c 	teqne	r5, ip
 8000758:	f000 f8a7 	bleq	80008aa <__aeabi_ddiv+0x16e>
 800075c:	eba4 0405 	sub.w	r4, r4, r5
 8000760:	ea81 0e03 	eor.w	lr, r1, r3
 8000764:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000768:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800076c:	f000 8088 	beq.w	8000880 <__aeabi_ddiv+0x144>
 8000770:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000774:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000778:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800077c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000780:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000784:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000788:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800078c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000790:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 8000794:	429d      	cmp	r5, r3
 8000796:	bf08      	it	eq
 8000798:	4296      	cmpeq	r6, r2
 800079a:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 800079e:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80007a2:	d202      	bcs.n	80007aa <__aeabi_ddiv+0x6e>
 80007a4:	085b      	lsrs	r3, r3, #1
 80007a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007aa:	1ab6      	subs	r6, r6, r2
 80007ac:	eb65 0503 	sbc.w	r5, r5, r3
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80007ba:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000800:	085b      	lsrs	r3, r3, #1
 8000802:	ea4f 0232 	mov.w	r2, r2, rrx
 8000806:	ebb6 0e02 	subs.w	lr, r6, r2
 800080a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800080e:	bf22      	ittt	cs
 8000810:	1ab6      	subcs	r6, r6, r2
 8000812:	4675      	movcs	r5, lr
 8000814:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000818:	ea55 0e06 	orrs.w	lr, r5, r6
 800081c:	d018      	beq.n	8000850 <__aeabi_ddiv+0x114>
 800081e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000822:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000826:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800082a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800082e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000832:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000836:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800083a:	d1c0      	bne.n	80007be <__aeabi_ddiv+0x82>
 800083c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000840:	d10b      	bne.n	800085a <__aeabi_ddiv+0x11e>
 8000842:	ea41 0100 	orr.w	r1, r1, r0
 8000846:	f04f 0000 	mov.w	r0, #0
 800084a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800084e:	e7b6      	b.n	80007be <__aeabi_ddiv+0x82>
 8000850:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000854:	bf04      	itt	eq
 8000856:	4301      	orreq	r1, r0
 8000858:	2000      	moveq	r0, #0
 800085a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800085e:	bf88      	it	hi
 8000860:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8000864:	f63f aeaf 	bhi.w	80005c6 <__aeabi_dmul+0xde>
 8000868:	ebb5 0c03 	subs.w	ip, r5, r3
 800086c:	bf04      	itt	eq
 800086e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000872:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000876:	f150 0000 	adcs.w	r0, r0, #0
 800087a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800087e:	bd70      	pop	{r4, r5, r6, pc}
 8000880:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8000884:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000888:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800088c:	bfc2      	ittt	gt
 800088e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000892:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000896:	bd70      	popgt	{r4, r5, r6, pc}
 8000898:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 800089c:	f04f 0e00 	mov.w	lr, #0
 80008a0:	3c01      	subs	r4, #1
 80008a2:	e690      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008a4:	ea45 0e06 	orr.w	lr, r5, r6
 80008a8:	e68d      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ae:	ea94 0f0c 	teq	r4, ip
 80008b2:	bf08      	it	eq
 80008b4:	ea95 0f0c 	teqeq	r5, ip
 80008b8:	f43f af3b 	beq.w	8000732 <__aeabi_dmul+0x24a>
 80008bc:	ea94 0f0c 	teq	r4, ip
 80008c0:	d10a      	bne.n	80008d8 <__aeabi_ddiv+0x19c>
 80008c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008c6:	f47f af34 	bne.w	8000732 <__aeabi_dmul+0x24a>
 80008ca:	ea95 0f0c 	teq	r5, ip
 80008ce:	f47f af25 	bne.w	800071c <__aeabi_dmul+0x234>
 80008d2:	4610      	mov	r0, r2
 80008d4:	4619      	mov	r1, r3
 80008d6:	e72c      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008d8:	ea95 0f0c 	teq	r5, ip
 80008dc:	d106      	bne.n	80008ec <__aeabi_ddiv+0x1b0>
 80008de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e2:	f43f aefd 	beq.w	80006e0 <__aeabi_dmul+0x1f8>
 80008e6:	4610      	mov	r0, r2
 80008e8:	4619      	mov	r1, r3
 80008ea:	e722      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008f0:	bf18      	it	ne
 80008f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008f6:	f47f aec5 	bne.w	8000684 <__aeabi_dmul+0x19c>
 80008fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008fe:	f47f af0d 	bne.w	800071c <__aeabi_dmul+0x234>
 8000902:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000906:	f47f aeeb 	bne.w	80006e0 <__aeabi_dmul+0x1f8>
 800090a:	e712      	b.n	8000732 <__aeabi_dmul+0x24a>

0800090c <__aeabi_d2f>:
 800090c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000910:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000914:	bf24      	itt	cs
 8000916:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 800091a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 800091e:	d90d      	bls.n	800093c <__aeabi_d2f+0x30>
 8000920:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000924:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000928:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800092c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000930:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000934:	bf08      	it	eq
 8000936:	f020 0001 	biceq.w	r0, r0, #1
 800093a:	4770      	bx	lr
 800093c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000940:	d121      	bne.n	8000986 <__aeabi_d2f+0x7a>
 8000942:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000946:	bfbc      	itt	lt
 8000948:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 800094c:	4770      	bxlt	lr
 800094e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000952:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000956:	f1c2 0218 	rsb	r2, r2, #24
 800095a:	f1c2 0c20 	rsb	ip, r2, #32
 800095e:	fa10 f30c 	lsls.w	r3, r0, ip
 8000962:	fa20 f002 	lsr.w	r0, r0, r2
 8000966:	bf18      	it	ne
 8000968:	f040 0001 	orrne.w	r0, r0, #1
 800096c:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000970:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000974:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000978:	ea40 000c 	orr.w	r0, r0, ip
 800097c:	fa23 f302 	lsr.w	r3, r3, r2
 8000980:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000984:	e7cc      	b.n	8000920 <__aeabi_d2f+0x14>
 8000986:	ea7f 5362 	mvns.w	r3, r2, asr #21
 800098a:	d107      	bne.n	800099c <__aeabi_d2f+0x90>
 800098c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000990:	bf1e      	ittt	ne
 8000992:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000996:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 800099a:	4770      	bxne	lr
 800099c:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 80009a0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 80009a4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 80009a8:	4770      	bx	lr
 80009aa:	bf00      	nop

080009ac <__aeabi_fmul>:
 80009ac:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80009b0:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 80009b4:	bf1e      	ittt	ne
 80009b6:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 80009ba:	ea92 0f0c 	teqne	r2, ip
 80009be:	ea93 0f0c 	teqne	r3, ip
 80009c2:	d06f      	beq.n	8000aa4 <__aeabi_fmul+0xf8>
 80009c4:	441a      	add	r2, r3
 80009c6:	ea80 0c01 	eor.w	ip, r0, r1
 80009ca:	0240      	lsls	r0, r0, #9
 80009cc:	bf18      	it	ne
 80009ce:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 80009d2:	d01e      	beq.n	8000a12 <__aeabi_fmul+0x66>
 80009d4:	f04f 6300 	mov.w	r3, #134217728	@ 0x8000000
 80009d8:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 80009dc:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 80009e0:	fba0 3101 	umull	r3, r1, r0, r1
 80009e4:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 80009e8:	f5b1 0f00 	cmp.w	r1, #8388608	@ 0x800000
 80009ec:	bf3e      	ittt	cc
 80009ee:	0049      	lslcc	r1, r1, #1
 80009f0:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 80009f4:	005b      	lslcc	r3, r3, #1
 80009f6:	ea40 0001 	orr.w	r0, r0, r1
 80009fa:	f162 027f 	sbc.w	r2, r2, #127	@ 0x7f
 80009fe:	2afd      	cmp	r2, #253	@ 0xfd
 8000a00:	d81d      	bhi.n	8000a3e <__aeabi_fmul+0x92>
 8000a02:	f1b3 4f00 	cmp.w	r3, #2147483648	@ 0x80000000
 8000a06:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000a0a:	bf08      	it	eq
 8000a0c:	f020 0001 	biceq.w	r0, r0, #1
 8000a10:	4770      	bx	lr
 8000a12:	f090 0f00 	teq	r0, #0
 8000a16:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000a1a:	bf08      	it	eq
 8000a1c:	0249      	lsleq	r1, r1, #9
 8000a1e:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000a22:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000a26:	3a7f      	subs	r2, #127	@ 0x7f
 8000a28:	bfc2      	ittt	gt
 8000a2a:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000a2e:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000a32:	4770      	bxgt	lr
 8000a34:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000a38:	f04f 0300 	mov.w	r3, #0
 8000a3c:	3a01      	subs	r2, #1
 8000a3e:	dc5d      	bgt.n	8000afc <__aeabi_fmul+0x150>
 8000a40:	f112 0f19 	cmn.w	r2, #25
 8000a44:	bfdc      	itt	le
 8000a46:	f000 4000 	andle.w	r0, r0, #2147483648	@ 0x80000000
 8000a4a:	4770      	bxle	lr
 8000a4c:	f1c2 0200 	rsb	r2, r2, #0
 8000a50:	0041      	lsls	r1, r0, #1
 8000a52:	fa21 f102 	lsr.w	r1, r1, r2
 8000a56:	f1c2 0220 	rsb	r2, r2, #32
 8000a5a:	fa00 fc02 	lsl.w	ip, r0, r2
 8000a5e:	ea5f 0031 	movs.w	r0, r1, rrx
 8000a62:	f140 0000 	adc.w	r0, r0, #0
 8000a66:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000a6a:	bf08      	it	eq
 8000a6c:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000a70:	4770      	bx	lr
 8000a72:	f092 0f00 	teq	r2, #0
 8000a76:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000a7a:	bf02      	ittt	eq
 8000a7c:	0040      	lsleq	r0, r0, #1
 8000a7e:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000a82:	3a01      	subeq	r2, #1
 8000a84:	d0f9      	beq.n	8000a7a <__aeabi_fmul+0xce>
 8000a86:	ea40 000c 	orr.w	r0, r0, ip
 8000a8a:	f093 0f00 	teq	r3, #0
 8000a8e:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000a92:	bf02      	ittt	eq
 8000a94:	0049      	lsleq	r1, r1, #1
 8000a96:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000a9a:	3b01      	subeq	r3, #1
 8000a9c:	d0f9      	beq.n	8000a92 <__aeabi_fmul+0xe6>
 8000a9e:	ea41 010c 	orr.w	r1, r1, ip
 8000aa2:	e78f      	b.n	80009c4 <__aeabi_fmul+0x18>
 8000aa4:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000aa8:	ea92 0f0c 	teq	r2, ip
 8000aac:	bf18      	it	ne
 8000aae:	ea93 0f0c 	teqne	r3, ip
 8000ab2:	d00a      	beq.n	8000aca <__aeabi_fmul+0x11e>
 8000ab4:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000ab8:	bf18      	it	ne
 8000aba:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000abe:	d1d8      	bne.n	8000a72 <__aeabi_fmul+0xc6>
 8000ac0:	ea80 0001 	eor.w	r0, r0, r1
 8000ac4:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000ac8:	4770      	bx	lr
 8000aca:	f090 0f00 	teq	r0, #0
 8000ace:	bf17      	itett	ne
 8000ad0:	f090 4f00 	teqne	r0, #2147483648	@ 0x80000000
 8000ad4:	4608      	moveq	r0, r1
 8000ad6:	f091 0f00 	teqne	r1, #0
 8000ada:	f091 4f00 	teqne	r1, #2147483648	@ 0x80000000
 8000ade:	d014      	beq.n	8000b0a <__aeabi_fmul+0x15e>
 8000ae0:	ea92 0f0c 	teq	r2, ip
 8000ae4:	d101      	bne.n	8000aea <__aeabi_fmul+0x13e>
 8000ae6:	0242      	lsls	r2, r0, #9
 8000ae8:	d10f      	bne.n	8000b0a <__aeabi_fmul+0x15e>
 8000aea:	ea93 0f0c 	teq	r3, ip
 8000aee:	d103      	bne.n	8000af8 <__aeabi_fmul+0x14c>
 8000af0:	024b      	lsls	r3, r1, #9
 8000af2:	bf18      	it	ne
 8000af4:	4608      	movne	r0, r1
 8000af6:	d108      	bne.n	8000b0a <__aeabi_fmul+0x15e>
 8000af8:	ea80 0001 	eor.w	r0, r0, r1
 8000afc:	f000 4000 	and.w	r0, r0, #2147483648	@ 0x80000000
 8000b00:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b04:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000b08:	4770      	bx	lr
 8000b0a:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000b0e:	f440 0040 	orr.w	r0, r0, #12582912	@ 0xc00000
 8000b12:	4770      	bx	lr

08000b14 <__aeabi_fdiv>:
 8000b14:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000b18:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000b1c:	bf1e      	ittt	ne
 8000b1e:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000b22:	ea92 0f0c 	teqne	r2, ip
 8000b26:	ea93 0f0c 	teqne	r3, ip
 8000b2a:	d069      	beq.n	8000c00 <__aeabi_fdiv+0xec>
 8000b2c:	eba2 0203 	sub.w	r2, r2, r3
 8000b30:	ea80 0c01 	eor.w	ip, r0, r1
 8000b34:	0249      	lsls	r1, r1, #9
 8000b36:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000b3a:	d037      	beq.n	8000bac <__aeabi_fdiv+0x98>
 8000b3c:	f04f 5380 	mov.w	r3, #268435456	@ 0x10000000
 8000b40:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000b44:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000b48:	f00c 4000 	and.w	r0, ip, #2147483648	@ 0x80000000
 8000b4c:	428b      	cmp	r3, r1
 8000b4e:	bf38      	it	cc
 8000b50:	005b      	lslcc	r3, r3, #1
 8000b52:	f142 027d 	adc.w	r2, r2, #125	@ 0x7d
 8000b56:	f44f 0c00 	mov.w	ip, #8388608	@ 0x800000
 8000b5a:	428b      	cmp	r3, r1
 8000b5c:	bf24      	itt	cs
 8000b5e:	1a5b      	subcs	r3, r3, r1
 8000b60:	ea40 000c 	orrcs.w	r0, r0, ip
 8000b64:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000b68:	bf24      	itt	cs
 8000b6a:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000b6e:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000b72:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000b76:	bf24      	itt	cs
 8000b78:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000b7c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000b80:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000b84:	bf24      	itt	cs
 8000b86:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000b8a:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000b8e:	011b      	lsls	r3, r3, #4
 8000b90:	bf18      	it	ne
 8000b92:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000b96:	d1e0      	bne.n	8000b5a <__aeabi_fdiv+0x46>
 8000b98:	2afd      	cmp	r2, #253	@ 0xfd
 8000b9a:	f63f af50 	bhi.w	8000a3e <__aeabi_fmul+0x92>
 8000b9e:	428b      	cmp	r3, r1
 8000ba0:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000ba4:	bf08      	it	eq
 8000ba6:	f020 0001 	biceq.w	r0, r0, #1
 8000baa:	4770      	bx	lr
 8000bac:	f00c 4c00 	and.w	ip, ip, #2147483648	@ 0x80000000
 8000bb0:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000bb4:	327f      	adds	r2, #127	@ 0x7f
 8000bb6:	bfc2      	ittt	gt
 8000bb8:	f1d2 03ff 	rsbsgt	r3, r2, #255	@ 0xff
 8000bbc:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000bc0:	4770      	bxgt	lr
 8000bc2:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bc6:	f04f 0300 	mov.w	r3, #0
 8000bca:	3a01      	subs	r2, #1
 8000bcc:	e737      	b.n	8000a3e <__aeabi_fmul+0x92>
 8000bce:	f092 0f00 	teq	r2, #0
 8000bd2:	f000 4c00 	and.w	ip, r0, #2147483648	@ 0x80000000
 8000bd6:	bf02      	ittt	eq
 8000bd8:	0040      	lsleq	r0, r0, #1
 8000bda:	f410 0f00 	tsteq.w	r0, #8388608	@ 0x800000
 8000bde:	3a01      	subeq	r2, #1
 8000be0:	d0f9      	beq.n	8000bd6 <__aeabi_fdiv+0xc2>
 8000be2:	ea40 000c 	orr.w	r0, r0, ip
 8000be6:	f093 0f00 	teq	r3, #0
 8000bea:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000bee:	bf02      	ittt	eq
 8000bf0:	0049      	lsleq	r1, r1, #1
 8000bf2:	f411 0f00 	tsteq.w	r1, #8388608	@ 0x800000
 8000bf6:	3b01      	subeq	r3, #1
 8000bf8:	d0f9      	beq.n	8000bee <__aeabi_fdiv+0xda>
 8000bfa:	ea41 010c 	orr.w	r1, r1, ip
 8000bfe:	e795      	b.n	8000b2c <__aeabi_fdiv+0x18>
 8000c00:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000c04:	ea92 0f0c 	teq	r2, ip
 8000c08:	d108      	bne.n	8000c1c <__aeabi_fdiv+0x108>
 8000c0a:	0242      	lsls	r2, r0, #9
 8000c0c:	f47f af7d 	bne.w	8000b0a <__aeabi_fmul+0x15e>
 8000c10:	ea93 0f0c 	teq	r3, ip
 8000c14:	f47f af70 	bne.w	8000af8 <__aeabi_fmul+0x14c>
 8000c18:	4608      	mov	r0, r1
 8000c1a:	e776      	b.n	8000b0a <__aeabi_fmul+0x15e>
 8000c1c:	ea93 0f0c 	teq	r3, ip
 8000c20:	d104      	bne.n	8000c2c <__aeabi_fdiv+0x118>
 8000c22:	024b      	lsls	r3, r1, #9
 8000c24:	f43f af4c 	beq.w	8000ac0 <__aeabi_fmul+0x114>
 8000c28:	4608      	mov	r0, r1
 8000c2a:	e76e      	b.n	8000b0a <__aeabi_fmul+0x15e>
 8000c2c:	f030 4c00 	bics.w	ip, r0, #2147483648	@ 0x80000000
 8000c30:	bf18      	it	ne
 8000c32:	f031 4c00 	bicsne.w	ip, r1, #2147483648	@ 0x80000000
 8000c36:	d1ca      	bne.n	8000bce <__aeabi_fdiv+0xba>
 8000c38:	f030 4200 	bics.w	r2, r0, #2147483648	@ 0x80000000
 8000c3c:	f47f af5c 	bne.w	8000af8 <__aeabi_fmul+0x14c>
 8000c40:	f031 4300 	bics.w	r3, r1, #2147483648	@ 0x80000000
 8000c44:	f47f af3c 	bne.w	8000ac0 <__aeabi_fmul+0x114>
 8000c48:	e75f      	b.n	8000b0a <__aeabi_fmul+0x15e>
 8000c4a:	bf00      	nop

08000c4c <ADC_ClockConfig>:
#include "ADC.h"


void ADC_ClockConfig(void)
{
 8000c4c:	b480      	push	{r7}
 8000c4e:	af00      	add	r7, sp, #0
	//HSEON: HSE clock enable
	RCC->RCC_CR |= (1 << 16);
 8000c50:	4b29      	ldr	r3, [pc, #164]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c52:	681b      	ldr	r3, [r3, #0]
 8000c54:	4a28      	ldr	r2, [pc, #160]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c56:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000c5a:	6013      	str	r3, [r2, #0]
	//External high-speed clock ready flag
	while (!((RCC->RCC_CR >> 17) & 1));
 8000c5c:	bf00      	nop
 8000c5e:	4b26      	ldr	r3, [pc, #152]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c60:	681b      	ldr	r3, [r3, #0]
 8000c62:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8000c66:	2b00      	cmp	r3, #0
 8000c68:	d0f9      	beq.n	8000c5e <ADC_ClockConfig+0x12>
	//External high-speed clock bypass
	//RCC->RCC_CR |= (1 << 18);
	//PLL enable
	RCC->RCC_CR |= (1 << 24);
 8000c6a:	4b23      	ldr	r3, [pc, #140]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c6c:	681b      	ldr	r3, [r3, #0]
 8000c6e:	4a22      	ldr	r2, [pc, #136]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c70:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000c74:	6013      	str	r3, [r2, #0]
	//PLL clock ready flag
	while (!((RCC->RCC_CR >> 25) & 1));
 8000c76:	bf00      	nop
 8000c78:	4b1f      	ldr	r3, [pc, #124]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c7a:	681b      	ldr	r3, [r3, #0]
 8000c7c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8000c80:	2b00      	cmp	r3, #0
 8000c82:	d0f9      	beq.n	8000c78 <ADC_ClockConfig+0x2c>
	//Microcontroller clock output: System clock (SYSCLK) selected
	RCC->RCC_CFGR |= (4 <<24);
 8000c84:	4b1c      	ldr	r3, [pc, #112]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c86:	685b      	ldr	r3, [r3, #4]
 8000c88:	4a1b      	ldr	r2, [pc, #108]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c8a:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000c8e:	6053      	str	r3, [r2, #4]
	// PLL multiplication factor: 9
	RCC->RCC_CFGR |= (7 << 18);
 8000c90:	4b19      	ldr	r3, [pc, #100]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c92:	685b      	ldr	r3, [r3, #4]
 8000c94:	4a18      	ldr	r2, [pc, #96]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c96:	f443 13e0 	orr.w	r3, r3, #1835008	@ 0x1c0000
 8000c9a:	6053      	str	r3, [r2, #4]
	//HSE divider for PLL entry: HSE clock not divided
	RCC->RCC_CFGR &= ~(1u << 17);
 8000c9c:	4b16      	ldr	r3, [pc, #88]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000c9e:	685b      	ldr	r3, [r3, #4]
 8000ca0:	4a15      	ldr	r2, [pc, #84]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000ca2:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 8000ca6:	6053      	str	r3, [r2, #4]
	//PLL entry clock source: HSE
	RCC->RCC_CFGR |= (1 << 16);
 8000ca8:	4b13      	ldr	r3, [pc, #76]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000caa:	685b      	ldr	r3, [r3, #4]
 8000cac:	4a12      	ldr	r2, [pc, #72]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cae:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8000cb2:	6053      	str	r3, [r2, #4]
	//ADC prescaler: 8
	RCC->RCC_CFGR |= (3 << 14);
 8000cb4:	4b10      	ldr	r3, [pc, #64]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cb6:	685b      	ldr	r3, [r3, #4]
 8000cb8:	4a0f      	ldr	r2, [pc, #60]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cba:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8000cbe:	6053      	str	r3, [r2, #4]
	//APB high-speed prescaler (APB2): 1
	RCC->RCC_CFGR &= ~(1u << 11);
 8000cc0:	4b0d      	ldr	r3, [pc, #52]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cc2:	685b      	ldr	r3, [r3, #4]
 8000cc4:	4a0c      	ldr	r2, [pc, #48]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cc6:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8000cca:	6053      	str	r3, [r2, #4]
	//AHB prescaler: 1
	RCC->RCC_CFGR &= ~(1u << 4);
 8000ccc:	4b0a      	ldr	r3, [pc, #40]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cce:	685b      	ldr	r3, [r3, #4]
 8000cd0:	4a09      	ldr	r2, [pc, #36]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cd2:	f023 0310 	bic.w	r3, r3, #16
 8000cd6:	6053      	str	r3, [r2, #4]
	//System clock switch: PLL selected as system clock
	RCC->RCC_CFGR |= (2 << 0);
 8000cd8:	4b07      	ldr	r3, [pc, #28]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cda:	685b      	ldr	r3, [r3, #4]
 8000cdc:	4a06      	ldr	r2, [pc, #24]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cde:	f043 0302 	orr.w	r3, r3, #2
 8000ce2:	6053      	str	r3, [r2, #4]
		//Enable ADC clock
	RCC->RCC_APB2ENR |= (1 << 9);
 8000ce4:	4b04      	ldr	r3, [pc, #16]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000ce6:	699b      	ldr	r3, [r3, #24]
 8000ce8:	4a03      	ldr	r2, [pc, #12]	@ (8000cf8 <ADC_ClockConfig+0xac>)
 8000cea:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000cee:	6193      	str	r3, [r2, #24]
}
 8000cf0:	bf00      	nop
 8000cf2:	46bd      	mov	sp, r7
 8000cf4:	bc80      	pop	{r7}
 8000cf6:	4770      	bx	lr
 8000cf8:	40021000 	.word	0x40021000

08000cfc <ADC_Config>:

void ADC_Config(ADC_TypeDef* ADC)
{
 8000cfc:	b480      	push	{r7}
 8000cfe:	b083      	sub	sp, #12
 8000d00:	af00      	add	r7, sp, #0
 8000d02:	6078      	str	r0, [r7, #4]
	// ADON: A/D converter ON 
	ADC->ADC_CR2 |= (1 << 0);
 8000d04:	687b      	ldr	r3, [r7, #4]
 8000d06:	689b      	ldr	r3, [r3, #8]
 8000d08:	f043 0201 	orr.w	r2, r3, #1
 8000d0c:	687b      	ldr	r3, [r7, #4]
 8000d0e:	609a      	str	r2, [r3, #8]
	//CONT: Continuous conversion
	ADC->ADC_CR2 |= (1 << 1);
 8000d10:	687b      	ldr	r3, [r7, #4]
 8000d12:	689b      	ldr	r3, [r3, #8]
 8000d14:	f043 0202 	orr.w	r2, r3, #2
 8000d18:	687b      	ldr	r3, [r7, #4]
 8000d1a:	609a      	str	r2, [r3, #8]
	//CAL: A/D Calibration
	ADC->ADC_CR2 |= (1 << 2);
 8000d1c:	687b      	ldr	r3, [r7, #4]
 8000d1e:	689b      	ldr	r3, [r3, #8]
 8000d20:	f043 0204 	orr.w	r2, r3, #4
 8000d24:	687b      	ldr	r3, [r7, #4]
 8000d26:	609a      	str	r2, [r3, #8]
	//Check complete calibration
	while ((ADC->ADC_CR2 >> 2) & 1);
 8000d28:	bf00      	nop
 8000d2a:	687b      	ldr	r3, [r7, #4]
 8000d2c:	689b      	ldr	r3, [r3, #8]
 8000d2e:	f003 0304 	and.w	r3, r3, #4
 8000d32:	2b00      	cmp	r3, #0
 8000d34:	d1f9      	bne.n	8000d2a <ADC_Config+0x2e>
	//ALIGN: Data alignment
	ADC->ADC_CR2 &= ~(1u << 11);
 8000d36:	687b      	ldr	r3, [r7, #4]
 8000d38:	689b      	ldr	r3, [r3, #8]
 8000d3a:	f423 6200 	bic.w	r2, r3, #2048	@ 0x800
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	609a      	str	r2, [r3, #8]
	//EXTSEL[2:0]: External event select for regular group
	ADC->ADC_CR2 |= (7 << 17);
 8000d42:	687b      	ldr	r3, [r7, #4]
 8000d44:	689b      	ldr	r3, [r3, #8]
 8000d46:	f443 2260 	orr.w	r2, r3, #917504	@ 0xe0000
 8000d4a:	687b      	ldr	r3, [r7, #4]
 8000d4c:	609a      	str	r2, [r3, #8]
	//SMPx[2:0]: Channel x Sample time selection, channel 0 x 1,5 cycles
	ADC->ADC_SMPR2 |= (7 << 0);
 8000d4e:	687b      	ldr	r3, [r7, #4]
 8000d50:	691b      	ldr	r3, [r3, #16]
 8000d52:	f043 0207 	orr.w	r2, r3, #7
 8000d56:	687b      	ldr	r3, [r7, #4]
 8000d58:	611a      	str	r2, [r3, #16]
	// L[3:0]: Regular channel sequence length
	ADC->ADC_SQR1 &= ~(1u << 20);
 8000d5a:	687b      	ldr	r3, [r7, #4]
 8000d5c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8000d5e:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 8000d62:	687b      	ldr	r3, [r7, #4]
 8000d64:	62da      	str	r2, [r3, #44]	@ 0x2c
	//SQ1[4:0]: 1st conversion in regular sequence
	ADC->ADC_SQR3 &= ~(1u << 0);
 8000d66:	687b      	ldr	r3, [r7, #4]
 8000d68:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8000d6a:	f023 0201 	bic.w	r2, r3, #1
 8000d6e:	687b      	ldr	r3, [r7, #4]
 8000d70:	635a      	str	r2, [r3, #52]	@ 0x34
	
}
 8000d72:	bf00      	nop
 8000d74:	370c      	adds	r7, #12
 8000d76:	46bd      	mov	sp, r7
 8000d78:	bc80      	pop	{r7}
 8000d7a:	4770      	bx	lr

08000d7c <ADC_Start>:

void ADC_Start(ADC_TypeDef* ADC)
{
 8000d7c:	b480      	push	{r7}
 8000d7e:	b083      	sub	sp, #12
 8000d80:	af00      	add	r7, sp, #0
 8000d82:	6078      	str	r0, [r7, #4]
	//A/D converter ON
	  ADC->ADC_CR2 |= (1 << 0);
 8000d84:	687b      	ldr	r3, [r7, #4]
 8000d86:	689b      	ldr	r3, [r3, #8]
 8000d88:	f043 0201 	orr.w	r2, r3, #1
 8000d8c:	687b      	ldr	r3, [r7, #4]
 8000d8e:	609a      	str	r2, [r3, #8]
	// SWSTART: Start conversion of regular channels
	ADC->ADC_CR2 |= (1 << 22);
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	689b      	ldr	r3, [r3, #8]
 8000d94:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 8000d98:	687b      	ldr	r3, [r7, #4]
 8000d9a:	609a      	str	r2, [r3, #8]
	//Wait for conversions started
	while (!((ADC->ADC_SR >> 4) & 1));
 8000d9c:	bf00      	nop
 8000d9e:	687b      	ldr	r3, [r7, #4]
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	f003 0310 	and.w	r3, r3, #16
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d0f9      	beq.n	8000d9e <ADC_Start+0x22>
	ADC->ADC_SR &= ~(1u << 4);
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	681b      	ldr	r3, [r3, #0]
 8000dae:	f023 0210 	bic.w	r2, r3, #16
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	601a      	str	r2, [r3, #0]
}
 8000db6:	bf00      	nop
 8000db8:	370c      	adds	r7, #12
 8000dba:	46bd      	mov	sp, r7
 8000dbc:	bc80      	pop	{r7}
 8000dbe:	4770      	bx	lr

08000dc0 <ADC_GetValue>:

uint16_t ADC_GetValue(ADC_TypeDef* ADC)
{
 8000dc0:	b480      	push	{r7}
 8000dc2:	b085      	sub	sp, #20
 8000dc4:	af00      	add	r7, sp, #0
 8000dc6:	6078      	str	r0, [r7, #4]
	//Wait for conversions ended
	while (!((ADC->ADC_SR >> 1) & 1));
 8000dc8:	bf00      	nop
 8000dca:	687b      	ldr	r3, [r7, #4]
 8000dcc:	681b      	ldr	r3, [r3, #0]
 8000dce:	f003 0302 	and.w	r3, r3, #2
 8000dd2:	2b00      	cmp	r3, #0
 8000dd4:	d0f9      	beq.n	8000dca <ADC_GetValue+0xa>
	uint16_t value = (uint16_t) ADC->ADC_DR;
 8000dd6:	687b      	ldr	r3, [r7, #4]
 8000dd8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8000dda:	81fb      	strh	r3, [r7, #14]
	ADC->ADC_SR &= ~(1u << 1);
 8000ddc:	687b      	ldr	r3, [r7, #4]
 8000dde:	681b      	ldr	r3, [r3, #0]
 8000de0:	f023 0202 	bic.w	r2, r3, #2
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	601a      	str	r2, [r3, #0]
	return value;
 8000de8:	89fb      	ldrh	r3, [r7, #14]
}
 8000dea:	4618      	mov	r0, r3
 8000dec:	3714      	adds	r7, #20
 8000dee:	46bd      	mov	sp, r7
 8000df0:	bc80      	pop	{r7}
 8000df2:	4770      	bx	lr

08000df4 <GPIO_ClockEnable>:
#include "GPIO.h"

void GPIO_ClockEnable(GPIORegister_TypeDef* gpiox)
{
 8000df4:	b480      	push	{r7}
 8000df6:	b083      	sub	sp, #12
 8000df8:	af00      	add	r7, sp, #0
 8000dfa:	6078      	str	r0, [r7, #4]
	if (gpiox == GPIOA)
 8000dfc:	687b      	ldr	r3, [r7, #4]
 8000dfe:	4a1d      	ldr	r2, [pc, #116]	@ (8000e74 <GPIO_ClockEnable+0x80>)
 8000e00:	4293      	cmp	r3, r2
 8000e02:	d106      	bne.n	8000e12 <GPIO_ClockEnable+0x1e>
	{
		GPIOA_PCLK_EN();
 8000e04:	4b1c      	ldr	r3, [pc, #112]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e06:	699b      	ldr	r3, [r3, #24]
 8000e08:	4a1b      	ldr	r2, [pc, #108]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e0a:	f043 0304 	orr.w	r3, r3, #4
 8000e0e:	6193      	str	r3, [r2, #24]
	else if (gpiox == GPIOE)
	{
		GPIOE_PCLK_EN();
	} 
	
}
 8000e10:	e02a      	b.n	8000e68 <GPIO_ClockEnable+0x74>
	else if (gpiox == GPIOB)
 8000e12:	687b      	ldr	r3, [r7, #4]
 8000e14:	4a17      	ldr	r2, [pc, #92]	@ (8000e74 <GPIO_ClockEnable+0x80>)
 8000e16:	4293      	cmp	r3, r2
 8000e18:	d106      	bne.n	8000e28 <GPIO_ClockEnable+0x34>
		GPIOB_PCLK_EN();
 8000e1a:	4b17      	ldr	r3, [pc, #92]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e1c:	699b      	ldr	r3, [r3, #24]
 8000e1e:	4a16      	ldr	r2, [pc, #88]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e20:	f043 0308 	orr.w	r3, r3, #8
 8000e24:	6193      	str	r3, [r2, #24]
}
 8000e26:	e01f      	b.n	8000e68 <GPIO_ClockEnable+0x74>
	else if (gpiox == GPIOC)
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	4a14      	ldr	r2, [pc, #80]	@ (8000e7c <GPIO_ClockEnable+0x88>)
 8000e2c:	4293      	cmp	r3, r2
 8000e2e:	d106      	bne.n	8000e3e <GPIO_ClockEnable+0x4a>
		GPIOC_PCLK_EN();
 8000e30:	4b11      	ldr	r3, [pc, #68]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e32:	699b      	ldr	r3, [r3, #24]
 8000e34:	4a10      	ldr	r2, [pc, #64]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e36:	f043 0310 	orr.w	r3, r3, #16
 8000e3a:	6193      	str	r3, [r2, #24]
}
 8000e3c:	e014      	b.n	8000e68 <GPIO_ClockEnable+0x74>
	else if (gpiox == GPIOD)
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	4a0f      	ldr	r2, [pc, #60]	@ (8000e80 <GPIO_ClockEnable+0x8c>)
 8000e42:	4293      	cmp	r3, r2
 8000e44:	d106      	bne.n	8000e54 <GPIO_ClockEnable+0x60>
		GPIOD_PCLK_EN();
 8000e46:	4b0c      	ldr	r3, [pc, #48]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e48:	699b      	ldr	r3, [r3, #24]
 8000e4a:	4a0b      	ldr	r2, [pc, #44]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e4c:	f043 0320 	orr.w	r3, r3, #32
 8000e50:	6193      	str	r3, [r2, #24]
}
 8000e52:	e009      	b.n	8000e68 <GPIO_ClockEnable+0x74>
	else if (gpiox == GPIOE)
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	4a0b      	ldr	r2, [pc, #44]	@ (8000e84 <GPIO_ClockEnable+0x90>)
 8000e58:	4293      	cmp	r3, r2
 8000e5a:	d105      	bne.n	8000e68 <GPIO_ClockEnable+0x74>
		GPIOE_PCLK_EN();
 8000e5c:	4b06      	ldr	r3, [pc, #24]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e5e:	699b      	ldr	r3, [r3, #24]
 8000e60:	4a05      	ldr	r2, [pc, #20]	@ (8000e78 <GPIO_ClockEnable+0x84>)
 8000e62:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000e66:	6193      	str	r3, [r2, #24]
}
 8000e68:	bf00      	nop
 8000e6a:	370c      	adds	r7, #12
 8000e6c:	46bd      	mov	sp, r7
 8000e6e:	bc80      	pop	{r7}
 8000e70:	4770      	bx	lr
 8000e72:	bf00      	nop
 8000e74:	40010c00 	.word	0x40010c00
 8000e78:	40021000 	.word	0x40021000
 8000e7c:	40011000 	.word	0x40011000
 8000e80:	40011400 	.word	0x40011400
 8000e84:	40011800 	.word	0x40011800

08000e88 <GPIO_Init>:

void GPIO_Init(GPIORegister_TypeDef* portx)
{
 8000e88:	b580      	push	{r7, lr}
 8000e8a:	b086      	sub	sp, #24
 8000e8c:	af00      	add	r7, sp, #0
 8000e8e:	6078      	str	r0, [r7, #4]
	GPIO_TypeDef GPIO_InitStruct = {0};
 8000e90:	f107 0308 	add.w	r3, r7, #8
 8000e94:	2200      	movs	r2, #0
 8000e96:	601a      	str	r2, [r3, #0]
 8000e98:	605a      	str	r2, [r3, #4]
 8000e9a:	609a      	str	r2, [r3, #8]
 8000e9c:	60da      	str	r2, [r3, #12]
	
	GPIO_InitStruct.GPIO_PinMode = GPIO_MODE_INPUT;
 8000e9e:	2300      	movs	r3, #0
 8000ea0:	613b      	str	r3, [r7, #16]
	GPIO_InitStruct.GPIO_PinNumber = GPIO_PIN_0;
 8000ea2:	2300      	movs	r3, #0
 8000ea4:	60fb      	str	r3, [r7, #12]
	GPIO_InitStruct.GPIO_PinType = GPIO_MODE_ANALOG;
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	617b      	str	r3, [r7, #20]
	//Enable peripheral clock
	GPIO_ClockEnable(portx);
 8000eaa:	6878      	ldr	r0, [r7, #4]
 8000eac:	f7ff ffa2 	bl	8000df4 <GPIO_ClockEnable>
	//Config mode of GPIO pin and speed
	portx->GPIOx_CRL &= ~(1u << 0);
 8000eb0:	687b      	ldr	r3, [r7, #4]
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	f023 0201 	bic.w	r2, r3, #1
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	601a      	str	r2, [r3, #0]
	portx->GPIOx_CRL &= ~(1u << 2);
 8000ebc:	687b      	ldr	r3, [r7, #4]
 8000ebe:	681b      	ldr	r3, [r3, #0]
 8000ec0:	f023 0204 	bic.w	r2, r3, #4
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	601a      	str	r2, [r3, #0]
}
 8000ec8:	bf00      	nop
 8000eca:	3718      	adds	r7, #24
 8000ecc:	46bd      	mov	sp, r7
 8000ece:	bd80      	pop	{r7, pc}

08000ed0 <delay>:


void delay(volatile int time);

void delay(volatile int time)
{
 8000ed0:	b480      	push	{r7}
 8000ed2:	b083      	sub	sp, #12
 8000ed4:	af00      	add	r7, sp, #0
 8000ed6:	6078      	str	r0, [r7, #4]
		while (time--);
 8000ed8:	bf00      	nop
 8000eda:	687b      	ldr	r3, [r7, #4]
 8000edc:	1e5a      	subs	r2, r3, #1
 8000ede:	607a      	str	r2, [r7, #4]
 8000ee0:	2b00      	cmp	r3, #0
 8000ee2:	d1fa      	bne.n	8000eda <delay+0xa>
}
 8000ee4:	bf00      	nop
 8000ee6:	bf00      	nop
 8000ee8:	370c      	adds	r7, #12
 8000eea:	46bd      	mov	sp, r7
 8000eec:	bc80      	pop	{r7}
 8000eee:	4770      	bx	lr

08000ef0 <main>:
                              (ANGLE_MAX - ANGLE_MIN);
    return angle;
}

int main()
{
 8000ef0:	b580      	push	{r7, lr}
 8000ef2:	af00      	add	r7, sp, #0
	//Clock config
	GPIO_Init(GPIOA);
 8000ef4:	4826      	ldr	r0, [pc, #152]	@ (8000f90 <main+0xa0>)
 8000ef6:	f7ff ffc7 	bl	8000e88 <GPIO_Init>
	ADC_ClockConfig();
 8000efa:	f7ff fea7 	bl	8000c4c <ADC_ClockConfig>
	ADC_Config(ADC1);
 8000efe:	4825      	ldr	r0, [pc, #148]	@ (8000f94 <main+0xa4>)
 8000f00:	f7ff fefc 	bl	8000cfc <ADC_Config>
	ADC_Start(ADC1);
 8000f04:	4823      	ldr	r0, [pc, #140]	@ (8000f94 <main+0xa4>)
 8000f06:	f7ff ff39 	bl	8000d7c <ADC_Start>

	while (1) 
	{
		value=ADC_GetValue(ADC1);
 8000f0a:	4822      	ldr	r0, [pc, #136]	@ (8000f94 <main+0xa4>)
 8000f0c:	f7ff ff58 	bl	8000dc0 <ADC_GetValue>
 8000f10:	4603      	mov	r3, r0
 8000f12:	461a      	mov	r2, r3
 8000f14:	4b20      	ldr	r3, [pc, #128]	@ (8000f98 <main+0xa8>)
 8000f16:	801a      	strh	r2, [r3, #0]
		voltage = (float) (value * 3.3) / ADC_RESOLUTION;
 8000f18:	4b1f      	ldr	r3, [pc, #124]	@ (8000f98 <main+0xa8>)
 8000f1a:	881b      	ldrh	r3, [r3, #0]
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	f7ff fa79 	bl	8000414 <__aeabi_i2d>
 8000f22:	a319      	add	r3, pc, #100	@ (adr r3, 8000f88 <main+0x98>)
 8000f24:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f28:	f7ff fade 	bl	80004e8 <__aeabi_dmul>
 8000f2c:	4602      	mov	r2, r0
 8000f2e:	460b      	mov	r3, r1
 8000f30:	4610      	mov	r0, r2
 8000f32:	4619      	mov	r1, r3
 8000f34:	f7ff fcea 	bl	800090c <__aeabi_d2f>
 8000f38:	4603      	mov	r3, r0
 8000f3a:	4918      	ldr	r1, [pc, #96]	@ (8000f9c <main+0xac>)
 8000f3c:	4618      	mov	r0, r3
 8000f3e:	f7ff fde9 	bl	8000b14 <__aeabi_fdiv>
 8000f42:	4603      	mov	r3, r0
 8000f44:	461a      	mov	r2, r3
 8000f46:	4b16      	ldr	r3, [pc, #88]	@ (8000fa0 <main+0xb0>)
 8000f48:	601a      	str	r2, [r3, #0]
		angle = (voltage * ANGLE_MAX / 3.3);
 8000f4a:	4b15      	ldr	r3, [pc, #84]	@ (8000fa0 <main+0xb0>)
 8000f4c:	681b      	ldr	r3, [r3, #0]
 8000f4e:	4915      	ldr	r1, [pc, #84]	@ (8000fa4 <main+0xb4>)
 8000f50:	4618      	mov	r0, r3
 8000f52:	f7ff fd2b 	bl	80009ac <__aeabi_fmul>
 8000f56:	4603      	mov	r3, r0
 8000f58:	4618      	mov	r0, r3
 8000f5a:	f7ff fa6d 	bl	8000438 <__aeabi_f2d>
 8000f5e:	a30a      	add	r3, pc, #40	@ (adr r3, 8000f88 <main+0x98>)
 8000f60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f64:	f7ff fbea 	bl	800073c <__aeabi_ddiv>
 8000f68:	4602      	mov	r2, r0
 8000f6a:	460b      	mov	r3, r1
 8000f6c:	4610      	mov	r0, r2
 8000f6e:	4619      	mov	r1, r3
 8000f70:	f7ff fccc 	bl	800090c <__aeabi_d2f>
 8000f74:	4603      	mov	r3, r0
 8000f76:	4a0c      	ldr	r2, [pc, #48]	@ (8000fa8 <main+0xb8>)
 8000f78:	6013      	str	r3, [r2, #0]

		delay(300000);
 8000f7a:	480c      	ldr	r0, [pc, #48]	@ (8000fac <main+0xbc>)
 8000f7c:	f7ff ffa8 	bl	8000ed0 <delay>
		value=ADC_GetValue(ADC1);
 8000f80:	bf00      	nop
 8000f82:	e7c2      	b.n	8000f0a <main+0x1a>
 8000f84:	f3af 8000 	nop.w
 8000f88:	66666666 	.word	0x66666666
 8000f8c:	400a6666 	.word	0x400a6666
 8000f90:	40010c00 	.word	0x40010c00
 8000f94:	40012400 	.word	0x40012400
 8000f98:	2000001c 	.word	0x2000001c
 8000f9c:	457ff000 	.word	0x457ff000
 8000fa0:	20000020 	.word	0x20000020
 8000fa4:	43340000 	.word	0x43340000
 8000fa8:	20000024 	.word	0x20000024
 8000fac:	000493e0 	.word	0x000493e0

08000fb0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000fb0:	480d      	ldr	r0, [pc, #52]	@ (8000fe8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000fb2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000fb4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000fb8:	480c      	ldr	r0, [pc, #48]	@ (8000fec <LoopForever+0x6>)
  ldr r1, =_edata
 8000fba:	490d      	ldr	r1, [pc, #52]	@ (8000ff0 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000fbc:	4a0d      	ldr	r2, [pc, #52]	@ (8000ff4 <LoopForever+0xe>)
  movs r3, #0
 8000fbe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000fc0:	e002      	b.n	8000fc8 <LoopCopyDataInit>

08000fc2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000fc2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fc4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fc6:	3304      	adds	r3, #4

08000fc8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fc8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fca:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fcc:	d3f9      	bcc.n	8000fc2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000fce:	4a0a      	ldr	r2, [pc, #40]	@ (8000ff8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000fd0:	4c0a      	ldr	r4, [pc, #40]	@ (8000ffc <LoopForever+0x16>)
  movs r3, #0
 8000fd2:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fd4:	e001      	b.n	8000fda <LoopFillZerobss>

08000fd6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fd6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000fd8:	3204      	adds	r2, #4

08000fda <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000fda:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000fdc:	d3fb      	bcc.n	8000fd6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000fde:	f000 f811 	bl	8001004 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fe2:	f7ff ff85 	bl	8000ef0 <main>

08000fe6 <LoopForever>:

LoopForever:
  b LoopForever
 8000fe6:	e7fe      	b.n	8000fe6 <LoopForever>
  ldr   r0, =_estack
 8000fe8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8000fec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000ff0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000ff4:	0800106c 	.word	0x0800106c
  ldr r2, =_sbss
 8000ff8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000ffc:	20000028 	.word	0x20000028

08001000 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001000:	e7fe      	b.n	8001000 <ADC1_2_IRQHandler>
	...

08001004 <__libc_init_array>:
 8001004:	b570      	push	{r4, r5, r6, lr}
 8001006:	2600      	movs	r6, #0
 8001008:	4d0c      	ldr	r5, [pc, #48]	@ (800103c <__libc_init_array+0x38>)
 800100a:	4c0d      	ldr	r4, [pc, #52]	@ (8001040 <__libc_init_array+0x3c>)
 800100c:	1b64      	subs	r4, r4, r5
 800100e:	10a4      	asrs	r4, r4, #2
 8001010:	42a6      	cmp	r6, r4
 8001012:	d109      	bne.n	8001028 <__libc_init_array+0x24>
 8001014:	f000 f81a 	bl	800104c <_init>
 8001018:	2600      	movs	r6, #0
 800101a:	4d0a      	ldr	r5, [pc, #40]	@ (8001044 <__libc_init_array+0x40>)
 800101c:	4c0a      	ldr	r4, [pc, #40]	@ (8001048 <__libc_init_array+0x44>)
 800101e:	1b64      	subs	r4, r4, r5
 8001020:	10a4      	asrs	r4, r4, #2
 8001022:	42a6      	cmp	r6, r4
 8001024:	d105      	bne.n	8001032 <__libc_init_array+0x2e>
 8001026:	bd70      	pop	{r4, r5, r6, pc}
 8001028:	f855 3b04 	ldr.w	r3, [r5], #4
 800102c:	4798      	blx	r3
 800102e:	3601      	adds	r6, #1
 8001030:	e7ee      	b.n	8001010 <__libc_init_array+0xc>
 8001032:	f855 3b04 	ldr.w	r3, [r5], #4
 8001036:	4798      	blx	r3
 8001038:	3601      	adds	r6, #1
 800103a:	e7f2      	b.n	8001022 <__libc_init_array+0x1e>
 800103c:	08001064 	.word	0x08001064
 8001040:	08001064 	.word	0x08001064
 8001044:	08001064 	.word	0x08001064
 8001048:	08001068 	.word	0x08001068

0800104c <_init>:
 800104c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800104e:	bf00      	nop
 8001050:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001052:	bc08      	pop	{r3}
 8001054:	469e      	mov	lr, r3
 8001056:	4770      	bx	lr

08001058 <_fini>:
 8001058:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800105a:	bf00      	nop
 800105c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800105e:	bc08      	pop	{r3}
 8001060:	469e      	mov	lr, r3
 8001062:	4770      	bx	lr
